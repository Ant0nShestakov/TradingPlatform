@using AVS.Models.AddressModels
@using AVS.Models.AdvertisementModels;
@model Advertisement;
@{
    ViewData["Title"] = "Create Advertisement";
}

<div class="personal_info">
    <div class="personal_info_container">
        <img class="userLogo" src="https://demotivation.ru/wp-content/uploads/2020/09/vindiesel156919.jpg" />
        <p><span>@ViewBag.Name</span> <span>@ViewBag.SecondName</span></p>
    </div>
    <hr>
    <div class="pesronal_settings">
        <a href="#">Мои сообщения</a>
        <a href="#">Мои объявлеия</a>
    </div>
</div>
<div class="chats_container">
    <h1>Создание объявления</h1>
    <content>
        <form asp-controller="Advertisement" asp-action="AddAdvertisement" method="post">
            <div>
                <label for="tittle">Название объявления</label>
                <input id="tittle" type="text" asp-for="Title"/>
            </div>

            <div>
                <label for="state">Состояние товара</label>
                <select id="state" asp-for="AdvertisementStateId">
                    <option value="">Выберите состояние вашего товара</option>
                    @foreach(AdvertisementState state in ViewBag.State)
                    {
                        <option value="@state.ID">@state.Name</option>
                    }
                </select>
            </div>

            <div>
                <label for="discription">Описание объявления</label>
                <input id="discription" type="text" asp-for="Description"/>
            </div>

            <div>
                <label for="country">Страна:</label>
                <select id="country" asp-for="Address.Street.Locality.Region.CountryID">
                    <option value="">Выберите страну</option>
                    @foreach (Country items in ViewBag.Country)
                    {
                        <option value="@items.Id">@items.Name</option>
                    }
                </select>
            </div>

            <div id="regionContainer" style="display: none;">
                <label for="region">Регион:</label>
                <select id="region" asp-for="Address.Street.Locality.RegionID">
                    <!-- Regions will be populated dynamically -->
                </select>
            </div>

            <div id="localityContainer" style="display: none;">
                <label for="locality">Город:</label>
                <select id="locality" asp-for="Address.Street.LocalityID">
                    <!-- Localities will be populated dynamically -->
                </select>
            </div>

            <div id="streetContainer" style="display: none;">
                <label for="street">Улица:</label>
                <select id="street" asp-for="Address.StreetID">
                    <!-- Streets will be populated dynamically -->
                </select>
            </div>

            <div id="addressDetails" style="display: none;">
                <div>
                    <label for="houseNumber">Номер дома:</label>
                    <input type="number" id="houseNumber" asp-for="Address.HouseNumber" />
                </div>

                <div>
                    <label for="entrance">Подъезд:</label>
                    <input type="number" id="entrance" asp-for="Address.Entrance" />
                </div>

                <div>
                    <label for="floor">Этаж:</label>
                    <input type="number" id="floor" asp-for="Address.Floor" />
                </div>

                <div>
                    <label for="flatNumber">Номер квартиры:</label>
                    <input type="number" id="flatNumber" asp-for="Address.FlatNumber" />
                </div>
            </div>

            <button type="submit">Submit</button>
        </form>
    </content>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            function clearSelect(selectId) {
                $(selectId).empty();
            }

            function hideContainers() {
                $('#regionContainer').hide();
                $('#localityContainer').hide();
                $('#streetContainer').hide();
                $('#addressDetails').hide();
            }

            // Изначально скрываем все зависимые контейнеры
            hideContainers();

            // Событие при изменении страны
            $('#country').change(function () {
                var countryId = $(this).val();
                clearSelect('#region');
                clearSelect('#locality');
                clearSelect('#street');

                if (countryId) {
                    $.ajax({
                        url: '/Advertisement/GetRegions',  // Убедитесь, что маршрут правильный
                        type: 'GET',
                        data: { id: countryId },
                        success: function (data) {
                            $('#region').append($('<option>', {
                                value: '',
                                text: 'Select Region'
                            }));
                            $.each(data, function (index, region) {
                                $('#region').append($('<option>', {
                                    value: region.id,
                                    text: region.name
                                }));
                            });
                            $('#regionContainer').show();  // Показываем контейнер регионов
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching regions:', error);
                        }
                    });
                } else {
                    hideContainers();  // Скрываем все, если нет выбранной страны
                }
            });

            // Событие при изменении региона
            $('#region').change(function () {
                var regionId = $(this).val();
                clearSelect('#locality');
                clearSelect('#street');
                $('#addressDetails').hide();  // Скрываем детали адреса

                if (regionId) {
                    $.ajax({
                        url: '/Advertisement/GetLocalities',
                        type: 'GET',
                        data: { id: regionId },
                        success: function (data) {
                            $('#locality').append($('<option>', {
                                value: '',
                                text: 'Select Locality'
                            }));
                            $.each(data, function (index, locality) {
                                $('#locality').append($('<option>', {
                                    value: locality.id,
                                    text: locality.name
                                }));
                            });
                            $('#localityContainer').show();  // Показываем контейнер локалитета
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching localities:', error);
                        }
                    });
                } else {
                    hideContainers();  // Скрываем все, если нет выбранного региона
                }
            });

            // Событие при изменении локалитета
            $('#locality').change(function () {
                var localityId = $(this).val();
                clearSelect('#street');  // Очищаем список улиц
                $('#addressDetails').hide();  // Скрываем детали адреса

                if (localityId) {
                    $.ajax({
                        url: '/Advertisement/GetStreets',
                        type: 'GET',
                        data: { id: localityId },
                        success: function (data) {
                            $('#street').append($('<option>', {
                                value: '',
                                text: 'Select Street'
                            }));
                            $.each(data, function (index, street) {
                                $('#street').append($('<option>', {
                                    value: street.id,
                                    text: street.name
                                }));
                            });
                            $('#streetContainer').show();  // Показываем контейнер улиц
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching streets:', error);
                        }
                    });
                } else {
                    hideContainers();  // Скрываем все, если нет выбранного локалитета
                }
            });

            // Событие при изменении улицы
            $('#street').change(function () {
                var streetId = $(this).val();
                if (streetId) {
                    $('#addressDetails').show();  // Показываем детали адреса
                } else {
                    $('#addressDetails').hide();  // Скрываем детали адреса, если нет выбранной улицы
                }
            });
        });
    </script>
}