@using AVS.Models.AddressModels
@using AVS.Models.AdvertisementModels
@model Advertisement

@{
    ViewData["Title"] = "Создание объявления";
}

<div class="personal_info">
    <div class="personal_info_container">
        <img class="userLogo" src="https://demotivation.ru/wp-content/uploads/2020/09/vindiesel156919.jpg" />
        <p><span>@ViewBag.User.Name</span> <span>@ViewBag.User.SecondName</span></p>
    </div>
    <hr>
    <div class="pesronal_settings">
        <a asp-controller="PersonalAccount" asp-action="Index">Мои сообщения</a>
        <a asp-controller="PersonalAccount" asp-action="MyAdvertisements">Мои объявления</a>
        <a asp-controller="Advertisement" asp-action="CreateAdvertisement">Создать объявление</a>
        <a asp-controller="PersonalAccount" asp-action="Logout">Выйти</a>
    </div>
</div>

<div class="chats_container">
    <h1>Создание объявления</h1>
    <content>
        <div style="max-height: 70vh; overflow-y: auto; overflow-x:hidden">
            <form asp-controller="Advertisement" asp-action="AddAdvertisement" method="post" enctype="multipart/form-data">
                <div>
                    <label for="tittle">Название объявления</label>
                    <input id="tittle" type="text" asp-for="Title" class="form-control" required />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div>
                    <label for="categories">Категории</label>
                    <select id="categories" asp-for="CategoryId" class="form-control select2" required>
                        <option value="">Выберите категорию</option>
                        @foreach (Category category in ViewBag.Categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div>
                    <label for="discription">Описание объявления</label>
                    <textarea id="btn-input"
                              class="form-control input-sm"
                              placeholder="Type your message here..."
                              rows="1"
                              style="overflow: hidden; resize: none;"
                              asp-for="Description" required></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div>
                    <label for="price">Цена товара, руб.</label>
                    <input id="price" type="text" asp-for="Price" class="form-control" pattern="^\d+(\.\d{1,2})?$"
                           title="Введите положительное число либо целое, либо с двумя знаками после точки " required />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div>
                    <label for="images">Изображения</label>
                    <input type="file" id="images" name="Images" class="form-control" multiple accept=".png, .jpg, .jpeg" style="position: absolute; left: -9999px;" required>
                    <div id="image-preview" class="slider"></div>
                </div>

                <button type="button" id="add-image" class="form-control">Добавить еще изображение</button>
                <button type="button" id="remove-all-images" class="form-control">Удалить все изображения</button>

                <div id="errorMessageContainer" class="alert alert-danger" style="display: none;">
                    <button type="button" class="close" onclick="hideErrorMessage()" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <strong>Ошибка!</strong> <span id="errorMessageText"></span>
                </div>

                <div>
                    <label for="country">Страна:</label>
                    <select id="country" asp-for="Address.Street.Locality.Region.CountryID" class="form-control select2" required>
                        <option value="">Выберите страну</option>
                        @foreach (Country items in ViewBag.Country)
                        {
                            <option value="@items.Id">@items.Name</option>
                        }
                    </select>
                    <span asp-validation-for="Address.Street.Locality.Region.CountryID"></span>
                </div>

                <div id="regionContainer" style="display: none;">
                    <label for="region">Регион:</label>
                    <select id="region" asp-for="Address.Street.Locality.RegionID" class="form-control select2" required>
                    </select>
                </div>

                <div id="localityContainer" style="display: none;">
                    <label for="locality">Город:</label>
                    <select id="locality" asp-for="Address.Street.LocalityID" class="form-control select2" required>
                    </select>
                </div>

                <div id="streetContainer" style="display: none;">
                    <label for="street">Улица:</label>
                    <select id="street" asp-for="Address.StreetID" class="form-control select2" required>
                    </select>
                </div>

                <div id="addressDetails" style="display: none;">
                    <div>
                        <label for="houseNumber">Номер дома:</label>
                        <input type="text" id="houseNumber" asp-for="Address.HouseNumber" class="form-control" required
                               pattern="^(?!0)\d{1,3}$" title="Введите положительное целое число" />
                    </div>

                    <div>
                        <label for="entrance">Подъезд:</label>
                        <input type="number" id="entrance" asp-for="Address.Entrance" class="form-control" required
                               pattern="^(?!0)\d{1,2}$" title="Введите положительное целое число" />
                    </div>

                    <div>
                        <label for="floor">Этаж:</label>
                        <input type="number" id="floor" asp-for="Address.Floor" class="form-control" required
                               pattern="^(?!0)\d{1,2}$" title="Введите положительное целое число" />
                    </div>

                    <div>
                        <label for="flatNumber">Номер квартиры:</label>
                        <input type="number" id="flatNumber" asp-for="Address.FlatNumber" class="form-control" required
                               pattern="^(?!0)\d{1,4}$" title="Введите положительное целое число" />
                    </div>
                </div>
                <div class="submit_button">
                    <button type="submit" class="form-control">Создать объявление</button>
                </div>
            </form>
        </div>
    </content>
</div>

@section Scripts {
    <script>
        function hideErrorMessage() {
            $('#errorMessageContainer').hide();
        }


        $(document).ready(function () {
            function initSlickSlider() {
                $('#image-preview').slick({
                    infinite: true,
                    slidesToShow: 3,
                    slidesToScroll: 3,
                    dots: true,
                    arrows: true
                });
            }

            function showError(message) {
                $('#errorMessageText').text(message);
                $('#errorMessageContainer').show();
            }

            function autoResizeTextarea() {
                const textarea = document.getElementById("btn-input");
                const maxHeight = 150;

                textarea.addEventListener("input", function () {
                    this.style.height = "auto";

                    const newHeight = this.scrollHeight;

                    if (newHeight > maxHeight) {
                        this.style.height = maxHeight + "px";
                        this.style.overflowY = "scroll";
                    } else {
                        this.style.height = newHeight + "px";
                        this.style.overflowY = "hidden";
                    }
                });
            }

            autoResizeTextarea();

            function clearSelect(selectId) {
                $(selectId).empty();
            }

            function hideContainers() {
                $('#regionContainer').hide();
                $('#localityContainer').hide();
                $('#streetContainer').hide();
                $('#addressDetails').hide();
            }

            hideContainers();

            // Обработчик изменения значения поля "Страна"
            $('#country').select2({
                placeholder: 'Выберите страну',
                allowClear: true
            }).change(function () {
                var countryId = $(this).val();
                clearSelect('#region');
                clearSelect('#locality');
                clearSelect('#street');

                if (countryId) {
                    $.ajax({
                        url: '/Advertisement/GetRegions',
                        type: 'GET',
                        data: { id: countryId },
                        success: function (data) {
                            $('#region').append($('<option>', {
                                value: '',
                                text: 'Select Region'
                            }));
                            $.each(data, function (index, region) {
                                $('#region').append($('<option>', {
                                    value: region.id,
                                    text: region.name
                                }));
                            });
                            $('#region').select2({
                                placeholder: 'Выберите регион',
                                allowClear: true
                            });
                            $('#regionContainer').show();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching regions:', error);
                        }
                    });
                } else {
                    hideContainers();
                }
            });

            // Обработчик изменения значения поля "Регион"
            $('#region').select2({
                placeholder: 'Выберите регион',
                allowClear: true
            }).change(function () {
                var regionId = $(this).val();
                clearSelect('#locality');
                clearSelect('#street');
                $('#addressDetails').hide();

                if (regionId) {
                    $.ajax({
                        url: '/Advertisement/GetLocalities',
                        type: 'GET',
                        data: { id: regionId },
                        success: function (data) {
                            $('#locality').append($('<option>', {
                                value: '',
                                text: 'Select Locality'
                            }));
                            $.each(data, function (index, locality) {
                                $('#locality').append($('<option>', {
                                    value: locality.id,
                                    text: locality.name
                                }));
                            });
                            $('#locality').select2({
                                placeholder: 'Выберите город',
                                allowClear: true
                            });
                            $('#localityContainer').show();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching localities:', error);
                        }
                    });
                } else {
                    $('#localityContainer').hide();
                    $('#streetContainer').hide();
                    $('#addressDetails').hide();
                }
            });

            // Обработчик изменения значения поля "Город"
            $('#locality').select2({
                placeholder: 'Выберите город',
                allowClear: true
            }).change(function () {
                var localityId = $(this).val();
                clearSelect('#street');
                $('#addressDetails').hide();

                if (localityId) {
                    $.ajax({
                        url: '/Advertisement/GetStreets',
                        type: 'GET',
                        data: { id: localityId },
                        success: function (data) {
                            $('#street').append($('<option>', {
                                value: '',
                                text: 'Select Street'
                            }));
                            $.each(data, function (index, street) {
                                $('#street').append($('<option>', {
                                    value: street.id,
                                    text: street.name
                                }));
                            });
                            $('#street').select2({
                                placeholder: 'Выберите улицу',
                                allowClear: true
                            });
                            $('#streetContainer').show();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching streets:', error);
                        }
                    });
                } else {
                    $('#streetContainer').hide();
                    $('#addressDetails').hide();
                }
            });

            $('#street').select2({
                placeholder: 'Выберите улицу',
                allowClear: true
            }).change(function () {
                if ($(this).val()) {
                    $('#addressDetails').show();
                } else {
                    $('#addressDetails').hide();
                }
            });

            $('#country').change(function () {
                if (!$(this).val()) {
                    $('#region').val('');
                    $('#locality').val('');
                    $('#street').val('');
                    $('#addressDetails input[type="number"]').val('');
                }
            });

            $('#region').change(function () {
                if (!$(this).val()) {
                    $('#locality').val('');
                    $('#street').val('');
                    $('#addressDetails input[type="number"]').val('');
                }
            });

            $('#locality').change(function () {
                if (!$(this).val()) {
                    $('#street').val('');
                    $('#addressDetails input[type="number"]').val('');
                }
            });

            $('#street').change(function () {
                if (!$(this).val()) {
                    $('#addressDetails input[type="number"]').val('');
                }
            });


            let imageList = [];
            $('#images').on('change', function (event) {
                var files = event.target.files;

                if (files.length > 0) {
                    Array.from(files).forEach(file => {
                        if (file.type === "image/png" || file.type === "image/jpeg" || file.type === "image/webp") {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                imageList.push(e.target.result);
                                $('#image-preview').slick('unslick');
                                $('#image-preview').empty();
                                imageList.forEach(image => {
                                    $('#image-preview').append('<div><img src="' + image + '" style="width:100%;"/></div>');
                                });
                                initSlickSlider();
                                hideErrorMessage();
                            }
                            reader.readAsDataURL(file);
                        } else {
                            showError("Недопустимый тип файла. Разрешены только файлы PNG, JPG и WEBP. Ваш выбор был удален!");
                            $(this).val('');
                        }
                    });
                }
            });

            $('#add-image').on('click', function () {
                $('#images').click();
            });

            $('#remove-all-images').on('click', function () {
                imageList = [];
                $('#image-preview').slick('unslick');
                $('#image-preview').empty();
                hideErrorMessage();
            });

            initSlickSlider();
        });
    </script>
}

